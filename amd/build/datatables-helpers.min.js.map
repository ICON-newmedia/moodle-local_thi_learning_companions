{"version":3,"file":"datatables-helpers.min.js","sources":["../src/datatables-helpers.js"],"sourcesContent":["/* eslint-disable jsdoc/require-param-type, valid-jsdoc */\nimport $ from 'jquery';\nimport 'local_thi_learning_companions/datatables';\n\n/**\n * Adds a default \"value is included in the column\" search to the datatables search.\n *\n * @param selector {string}\n * @param table {*}\n */\nexport const setupSearchRules = (selector, table) => {\n    $(selector).each(function() {\n        $(this).on('keyup change clear', function() {\n            let elementValue;\n\n            if (this.type === 'checkbox') {\n                elementValue = this.checked ? 1 : '';\n            } else {\n                elementValue = this.value;\n            }\n\n            let column;\n            // Check of the target is a number\n            if (isNaN($(this).data('target'))) {\n                column = table.column(`.${$(this).data('target')}`);\n            } else {\n                column = table.column($(this).data('target'));\n            }\n            column.search(elementValue).draw();\n        });\n    });\n};\n\n/**\n * Adds the elements to the datatables search, for an OR value search.\n * The elements need a data-target attribute, which is the column index or class to search.\n *\n * @param selector\n */\nexport const initOrSearch = (selector) => {\n    $(selector).each(function() {\n        addOrSearch($(this));\n    });\n};\n\n/**\n * Adds a specific element to the datatables search, for an OR value search.\n *\n * @param element {jQuery} The element the search relates to.\n */\nexport const addOrSearch = (element) => {\n    $.fn.dataTable.ext.search.push((settings, data) => {\n        let searchVal = element.val() ?? '';\n\n        //If the search value is empty, don´t filter it.\n        if (!searchVal) {\n            return true;\n        }\n\n        const indexes = getTargetColumnIndexes(settings, element);\n        if (indexes === null) {\n            return true;\n        }\n\n        for (const index of indexes) {\n            /**\n             * @type {string}\n             */\n            if (data[index].includes(searchVal)) {\n                return true;\n            }\n        }\n        return false;\n    });\n};\n\n/**\n * Adds the elements to the datatables search, for a minimum value search.\n * The elements need a data-target attribute, which is the column index to search.\n *\n * @param selector\n */\nexport const initMinSearch = (selector) => {\n    $(selector).each(function() {\n        addMinSearch($(this));\n    });\n};\n\n/**\n * Adds a specific element to the datatables search, for a minimum value search.\n *\n * @param element {jQuery} The element the search relates to.\n */\nexport const addMinSearch = (element) => {\n    $.fn.dataTable.ext.search.push((settings, data) => {\n        let min = element.val() ?? '';\n\n        if (!min) {\n            return true;\n        }\n\n        if (element.attr('type') === 'date') {\n            const minDate = new Date(min);\n            min = minDate.getTime() / 1000;\n        }\n\n        let index = getTargetColumnIndexes(settings, element);\n        if (index === null) {\n            return true;\n        }\n        index = index[0];\n\n        /**\n         * @type {number}\n         */\n        const value = +data[index];\n        if (min) {\n            return value >= min;\n        }\n        return true;\n    });\n};\n\n/**\n * Adds a specific select element to the datatables search, for an include search value search.\n * The element should be an element, that can select multiple values. Otherwise, just use the setupSearchRules function.\n * The elements should have a data-target attribute, which is the column index to search.\n *\n * @param selector {string}\n */\nexport const initIncludeSearch = (selector) => {\n    $(selector).each(function() {\n        addIncludeSearch($(this));\n    });\n};\n\n/**\n * Adds a specific select element to the datatables search, for an include search value search.\n *\n * @param element {jQuery} The element the search relates to.\n */\nexport const addIncludeSearch = (element) => {\n    $.fn.dataTable.ext.search.push((settings, data) => {\n        /**\n         * @type {string[]}\n         */\n        const include = element.val() ?? [];\n\n        let index = getTargetColumnIndexes(settings, element);\n        if (index === null) {\n            return true;\n        }\n        index = index[0];\n\n        /**\n         * @type {string}\n         */\n        const value = data[index];\n\n        if (include.length) {\n            return include.every((item) => value.includes(item));\n        }\n        return true;\n    });\n};\n\n/**\n * This function adds an event listener to the given selector that will redraw the given table\n *\n * @param selector {string}\n * @param table {*}\n */\nexport const addRedrawEvent = (selector, table) => {\n    $(selector).on('change keyup clear', function() {\n        table.draw();\n    });\n};\n\n/**\n *\n * @param settings {*}\n * @param className {string}\n *\n * @returns {null|int}\n */\nconst getIndexByClass = (settings, className) => {\n    for (const index in settings.aoColumns) {\n        if (settings.aoColumns[index].nTh.classList.contains(className)) {\n            return +index;\n        }\n    }\n\n    return null;\n};\n\n/**\n *\n * @param settings {*}\n * @param element {jQuery}\n * @returns {null|int[]}\n */\nconst getTargetColumnIndexes = (settings, element) => {\n    const targetData = element.data('target');\n\n    // It´s not set? Return null.\n    if (targetData === undefined) {\n        // eslint-disable-next-line no-console\n        console.error('data-target is not defined or not a number for', element);\n        return null;\n    }\n\n    //if it´s just a single number, return it\n    if (!isNaN(targetData)) {\n        return [targetData];\n    }\n\n    //Split it, so we can support multiple classes.\n    const targetArray = targetData.split(',');\n\n    //Map the array to the index.\n    return targetArray.map((target) => {\n        // It´s a number? Return it.\n        if (!isNaN(target)) {\n            return target;\n        }\n\n        // It´s a string? Try to find the index by the class name.\n        return getIndexByClass(settings, target);\n    });\n};\n\nexport const makeTablesFullWidth = function () {\n    if (document.querySelector('.dataTable') !== null) {\n        // make page and table full width\n        document.querySelector('body').classList.add('hasDatatable');\n        $('.dataTable').css('width', '');\n    }\n};\n"],"names":["selector","table","each","this","on","elementValue","column","type","checked","value","isNaN","data","search","draw","addOrSearch","element","fn","dataTable","ext","push","settings","searchVal","val","indexes","getTargetColumnIndexes","index","includes","addMinSearch","min","attr","Date","getTime","addIncludeSearch","include","length","every","item","targetData","undefined","console","error","split","map","target","className","aoColumns","nTh","classList","contains","getIndexByClass","document","querySelector","add","css"],"mappings":"uhBAUgC,CAACA,SAAUC,6BACrCD,UAAUE,MAAK,+BACXC,MAAMC,GAAG,sBAAsB,eACzBC,aAQAC,OALAD,aADc,aAAdF,KAAKI,KACUJ,KAAKK,QAAU,EAAI,GAEnBL,KAAKM,MAMpBH,OADAI,OAAM,mBAAEP,MAAMQ,KAAK,WACVV,MAAMK,mBAAW,mBAAEH,MAAMQ,KAAK,YAE9BV,MAAMK,QAAO,mBAAEH,MAAMQ,KAAK,WAEvCL,OAAOM,OAAOP,cAAcQ,oCAWXb,+BACvBA,UAAUE,MAAK,WACbY,aAAY,mBAAEX,iBASTW,YAAeC,0BACtBC,GAAGC,UAAUC,IAAIN,OAAOO,MAAK,CAACC,SAAUT,6BAClCU,+BAAYN,QAAQO,2CAAS,OAG5BD,iBACM,QAGLE,QAAUC,uBAAuBJ,SAAUL,YACjC,OAAZQ,eACO,MAGN,MAAME,SAASF,WAIZZ,KAAKc,OAAOC,SAASL,kBACd,SAGR,8DAUerB,+BACxBA,UAAUE,MAAK,WACbyB,cAAa,mBAAExB,iBASVwB,aAAgBZ,0BACvBC,GAAGC,UAAUC,IAAIN,OAAOO,MAAK,CAACC,SAAUT,8BAClCiB,0BAAMb,QAAQO,6CAAS,OAEtBM,WACM,KAGkB,SAAzBb,QAAQc,KAAK,QAAoB,CAEjCD,IADgB,IAAIE,KAAKF,KACXG,UAAY,QAG1BN,MAAQD,uBAAuBJ,SAAUL,YAC/B,OAAVU,aACO,EAEXA,MAAQA,MAAM,SAKRhB,OAASE,KAAKc,cAChBG,KACOnB,OAASmB,sEAaM5B,+BAC5BA,UAAUE,MAAK,WACb8B,kBAAiB,mBAAE7B,iBASd6B,iBAAoBjB,0BAC3BC,GAAGC,UAAUC,IAAIN,OAAOO,MAAK,CAACC,SAAUT,gCAIhCsB,8BAAUlB,QAAQO,6CAAS,OAE7BG,MAAQD,uBAAuBJ,SAAUL,YAC/B,OAAVU,aACO,EAEXA,MAAQA,MAAM,SAKRhB,MAAQE,KAAKc,cAEfQ,QAAQC,QACDD,QAAQE,OAAOC,MAAS3B,MAAMiB,SAASU,+EAY5B,CAACpC,SAAUC,6BACnCD,UAAUI,GAAG,sBAAsB,WACjCH,MAAMY,iBA2BRW,uBAAyB,CAACJ,SAAUL,iBAChCsB,WAAatB,QAAQJ,KAAK,kBAGb2B,IAAfD,kBAEAE,QAAQC,MAAM,iDAAkDzB,SACzD,SAINL,MAAM2B,kBACA,CAACA,mBAIQA,WAAWI,MAAM,KAGlBC,KAAKC,QAEfjC,MAAMiC,QArCK,EAACvB,SAAUwB,iBAC1B,MAAMnB,SAASL,SAASyB,aACrBzB,SAASyB,UAAUpB,OAAOqB,IAAIC,UAAUC,SAASJ,kBACzCnB,aAIT,MAmCIwB,CAAgB7B,SAAUuB,QAJtBA,uCAQgB,WACc,OAAzCO,SAASC,cAAc,gBAEvBD,SAASC,cAAc,QAAQJ,UAAUK,IAAI,oCAC3C,cAAcC,IAAI,QAAS"}