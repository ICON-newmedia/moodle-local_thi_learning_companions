{"version":3,"file":"datatables-helpers.min.js","sources":["../src/datatables-helpers.js"],"sourcesContent":["/* eslint-disable jsdoc/require-param-type, valid-jsdoc */\r\nimport $ from 'jquery';\r\n// import 'local_learningcompanions/jquery.dataTables';\r\nimport 'local_learningcompanions/datatables';\r\n\r\n/**\r\n * Adds a default \"value is included in the column\" search to the datatables search.\r\n *\r\n * @param selector {string}\r\n * @param table {*}\r\n */\r\nexport const setupSearchRules = (selector, table) => {\r\n    $(selector).each(function() {\r\n        $(this).on('keyup change clear', function() {\r\n            let elementValue;\r\n\r\n            if (this.type === 'checkbox') {\r\n                elementValue = this.checked ? 1 : '';\r\n            } else {\r\n                elementValue = this.value;\r\n            }\r\n\r\n            let column;\r\n            // Check of the target is a number\r\n            if (isNaN($(this).data('target'))) {\r\n                column = table.column(`.${$(this).data('target')}`);\r\n            } else {\r\n                column = table.column($(this).data('target'));\r\n            }\r\n            column.search(elementValue).draw();\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\n * Adds the elements to the datatables search, for a minimum value search.\r\n * The elements need a data-target attribute, which is the column index to search.\r\n *\r\n * @param selector\r\n */\r\nexport const initMinSearch = (selector) => {\r\n    $(selector).each(function() {\r\n        addMinSearch($(this));\r\n    });\r\n};\r\n\r\n/**\r\n * Adds a specific element to the datatables search, for a minimum value search.\r\n *\r\n * @param element {jQuery} The element the search relates to.\r\n */\r\nexport const addMinSearch = (element) => {\r\n    $.fn.dataTable.ext.search.push(function(settings, data) {\r\n        let min = element.val() ?? '';\r\n\r\n        if (!min) {\r\n            return true;\r\n        }\r\n\r\n        if (element.attr('type') === 'date') {\r\n            const minDate = new Date(min);\r\n            min = minDate.getTime() / 1000;\r\n        }\r\n\r\n        const index = getTargetColumnIndex(settings, element);\r\n        if (index === null) {\r\n            return true;\r\n        }\r\n\r\n        /**\r\n         * @type {number}\r\n         */\r\n        const value = +data[index];\r\n        if (min) {\r\n            return value >= min;\r\n        }\r\n        return true;\r\n    });\r\n};\r\n\r\n/**\r\n * Adds a specific select element to the datatables search, for an include search value search.\r\n * The element should be an element, that can select multiple values. Otherwise, just use the setupSearchRules function.\r\n * The elements should have a data-target attribute, which is the column index to search.\r\n *\r\n * @param selector {string}\r\n */\r\nexport const initIncludeSearch = (selector) => {\r\n    $(selector).each(function() {\r\n        addIncludeSearch($(this));\r\n    });\r\n};\r\n\r\n/**\r\n * Adds a specific select element to the datatables search, for an include search value search.\r\n *\r\n * @param element {jQuery} The element the search relates to.\r\n */\r\nexport const addIncludeSearch = (element) => {\r\n    $.fn.dataTable.ext.search.push(function(settings, data) {\r\n        /**\r\n         * @type {string[]}\r\n         */\r\n        const include = element.val() ?? [];\r\n\r\n        const index = getTargetColumnIndex(settings, element);\r\n        if (index === null) {\r\n            return true;\r\n        }\r\n\r\n        /**\r\n         * @type {string}\r\n         */\r\n        const value = data[index];\r\n\r\n        if (include.length) {\r\n            return include.every((item) => value.includes(item));\r\n        }\r\n        return true;\r\n    });\r\n};\r\n\r\n/**\r\n * This function adds an event listener to the given selector that will redraw the given table\r\n *\r\n * @param selector {string}\r\n * @param table {*}\r\n */\r\nexport const addRedrawEvent = (selector, table) => {\r\n    $(selector).on('change keyup clear', function() {\r\n        table.draw();\r\n    });\r\n};\r\n\r\n/**\r\n *\r\n * @param settings {*}\r\n * @param className {string}\r\n *\r\n * @returns {null|int}\r\n */\r\nconst getIndexByClass = (settings, className) => {\r\n    for (const index in settings.aoColumns) {\r\n        if (settings.aoColumns[index].nTh.classList.contains(className)) {\r\n            return +index;\r\n        }\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\n/**\r\n *\r\n * @param settings {*}\r\n * @param element {jQuery}\r\n * @returns {null|int}\r\n */\r\nconst getTargetColumnIndex = (settings, element) => {\r\n    const target = element.data('target');\r\n\r\n    // It´s not set? Return null.\r\n    if (target === undefined) {\r\n        // eslint-disable-next-line no-console\r\n        console.error('data-target is not defined or not a number for', element);\r\n        return null;\r\n    }\r\n\r\n    // It´s a number? Return it.\r\n    if (!isNaN(target)) {\r\n        return target;\r\n    }\r\n\r\n    // It´s a string? Try to find the index by the class name.\r\n    return getIndexByClass(settings, target);\r\n};\r\n"],"names":["selector","table","each","this","on","elementValue","column","type","checked","value","isNaN","data","search","draw","addMinSearch","element","fn","dataTable","ext","push","settings","min","val","attr","Date","getTime","index","getTargetColumnIndex","addIncludeSearch","include","length","every","item","includes","target","undefined","console","error","className","aoColumns","nTh","classList","contains","getIndexByClass"],"mappings":"qcAWgC,CAACA,SAAUC,6BACrCD,UAAUE,MAAK,+BACXC,MAAMC,GAAG,sBAAsB,eACzBC,aAQAC,OALAD,aADc,aAAdF,KAAKI,KACUJ,KAAKK,QAAU,EAAI,GAEnBL,KAAKM,MAMpBH,OADAI,OAAM,mBAAEP,MAAMQ,KAAK,WACVV,MAAMK,mBAAW,mBAAEH,MAAMQ,KAAK,YAE9BV,MAAMK,QAAO,mBAAEH,MAAMQ,KAAK,WAEvCL,OAAOM,OAAOP,cAAcQ,qCAWVb,+BACxBA,UAAUE,MAAK,WACbY,cAAa,mBAAEX,iBASVW,aAAgBC,0BACvBC,GAAGC,UAAUC,IAAIN,OAAOO,MAAK,SAASC,SAAUT,2BAC1CU,yBAAMN,QAAQO,2CAAS,OAEtBD,WACM,KAGkB,SAAzBN,QAAQQ,KAAK,QAAoB,CAEjCF,IADgB,IAAIG,KAAKH,KACXI,UAAY,UAGxBC,MAAQC,qBAAqBP,SAAUL,YAC/B,OAAVW,aACO,QAMLjB,OAASE,KAAKe,cAChBL,KACOZ,OAASY,sEAaMrB,+BAC5BA,UAAUE,MAAK,WACb0B,kBAAiB,mBAAEzB,iBASdyB,iBAAoBb,0BAC3BC,GAAGC,UAAUC,IAAIN,OAAOO,MAAK,SAASC,SAAUT,8BAIxCkB,8BAAUd,QAAQO,6CAAS,GAE3BI,MAAQC,qBAAqBP,SAAUL,YAC/B,OAAVW,aACO,QAMLjB,MAAQE,KAAKe,cAEfG,QAAQC,QACDD,QAAQE,OAAOC,MAASvB,MAAMwB,SAASD,+EAY5B,CAAChC,SAAUC,6BACnCD,UAAUI,GAAG,sBAAsB,WACjCH,MAAMY,iBA2BRc,qBAAuB,CAACP,SAAUL,iBAC9BmB,OAASnB,QAAQJ,KAAK,sBAGbwB,IAAXD,QAEAE,QAAQC,MAAM,iDAAkDtB,SACzD,MAINL,MAAMwB,QA3BS,EAACd,SAAUkB,iBAC1B,MAAMZ,SAASN,SAASmB,aACrBnB,SAASmB,UAAUb,OAAOc,IAAIC,UAAUC,SAASJ,kBACzCZ,aAIT,MAyBAiB,CAAgBvB,SAAUc,QAJtBA"}