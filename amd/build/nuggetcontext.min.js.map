{"version":3,"file":"nuggetcontext.min.js","sources":["../src/nuggetcontext.js"],"sourcesContent":["define(['jquery', 'core/ajax', 'core/notification'], function ($, Ajax, Notification) {\r\n    return {\r\n        /**\r\n         * Source of data for Ajax element.\r\n         *\r\n         * @param {String} selector The selector of the auto complete element.\r\n         * @param {String} query The query string.\r\n         * @param {Function} callback A callback function receiving an array of results.\r\n         * @param {Function} failure A callback function to be called in case of failure, receiving the error message.\r\n         * @return {Void}\r\n         */\r\n        transport: function (selector, query, callback, failure) {\r\n            var courseid = parseInt($('#id_courseid').val());\r\n            if (isNaN(courseid)) {\r\n                courseid = null;\r\n            }\r\n            Ajax.call([{\r\n                methodname: 'local_learningcompanions_nugget_list',\r\n                args: {\r\n                    courseid: courseid,\r\n                    query: query\r\n                },\r\n                done: function (data) {\r\n                    // ICTODO: do something\r\n                },\r\n                fail: Notification.exception\r\n            }])[0].then(callback).catch(failure);\r\n        },\r\n\r\n        /**\r\n         * Process the results for auto complete elements.\r\n         *\r\n         * @param {String} selector The selector of the auto complete element.\r\n         * @param {Array} results An array or results.\r\n         * @return {Array} New array of results.\r\n         */\r\n        processResults: function (selector, results) {\r\n            var options = [];\r\n            $.each(results, function(index, data) {\r\n                options.push({\r\n                    value: data.id,\r\n                    label: data.name\r\n                });\r\n            });\r\n            return options;\r\n        }\r\n    };\r\n});"],"names":["define","$","Ajax","Notification","transport","selector","query","callback","failure","courseid","parseInt","val","isNaN","call","methodname","args","done","data","fail","exception","then","catch","processResults","results","options","each","index","push","value","id","label","name"],"mappings":"AAAAA,gDAAO,CAAC,SAAU,YAAa,sBAAsB,SAAUC,EAAGC,KAAMC,oBAC7D,CAUHC,UAAW,SAAUC,SAAUC,MAAOC,SAAUC,aACxCC,SAAWC,SAAST,EAAE,gBAAgBU,OACtCC,MAAMH,YACNA,SAAW,MAEfP,KAAKW,KAAK,CAAC,CACPC,WAAY,uCACZC,KAAM,CACFN,SAAUA,SACVH,MAAOA,OAEXU,KAAM,SAAUC,QAGhBC,KAAMf,aAAagB,aACnB,GAAGC,KAAKb,UAAUc,MAAMb,UAUhCc,eAAgB,SAAUjB,SAAUkB,aAC5BC,QAAU,UACdvB,EAAEwB,KAAKF,SAAS,SAASG,MAAOT,MAC5BO,QAAQG,KAAK,CACTC,MAAOX,KAAKY,GACZC,MAAOb,KAAKc,UAGbP"}